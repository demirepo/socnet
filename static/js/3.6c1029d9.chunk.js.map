{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/Post/Post.module.css","components/Profile/UserInfo/UserInfo.module.css","components/Profile/NewPost/NewPost.module.css","components/Profile/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/UserInfo/UserInfo.jsx","components/Profile/NewPost/NewPost.jsx","components/Profile/Status.jsx","components/Profile/Profile.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/profileSelectors.js","redux/authSelectors.js","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","Post","props","className","s","post","image","src","alt","message","text","likes","MyPosts","postsList","posts","map","id","UserInfo","contactsItems","data","contacts","Object","keys","m","userinfo","avatar","photos","large","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","NewPostReduxForm","reduxForm","form","handleSubmit","newPost","onSubmit","Field","component","name","cols","rows","placeholder","newpostBtn","Status","updateStatusOnServer","propsStatusText","statusText","useState","showInput","setShowInput","setStatusText","hideStatusInput","statusBox","onChange","e","target","value","onKeyDown","key","statusInput","autoFocus","type","onBlur","onDoubleClick","Profile","profileData","content","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","assign","lastResult","recomputations","resetRecomputations","getPostsReselector","state","profilePage","filter","el","getProfileData","getStatusText","getIsAuthorized","auth","isAuthorized","getAuthorizedUserId","ProfileContainer","userId","this","match","authorizedUserId","getStatusFromServer","setProfileThunkCreator","dispatch","addPost","newMessage","React","Component","compose","connect","isAuthed","withRouter","to"],"mappings":"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","file":"static/js/3.6c1029d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bigpic\":\"Profile_bigpic__3o2kF\",\"statusBox\":\"Profile_statusBox__duzRg\",\"statusInput\":\"Profile_statusInput__3VvqU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__36ZwT\",\"image\":\"Post_image__C6w7D\",\"message\":\"Post_message__2d9H-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"UserInfo_avatar__1y-Mv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"NewPost_newPost__OU5Dp\",\"newpostBtn\":\"NewPost_newpostBtn__RjG0n\"};","import s from \"./Post.module.css\";\r\n\r\nexport default function Post(props) {\r\n  return (\r\n    <div className={s.post}>\r\n      <img className={s.image} src=\"/img/ava-blue.jpg\" alt=\"avatar\" />\r\n      <div className={s.message}>\r\n        {props.text}\r\n        <br></br>\r\n        Понравилось: {props.likes} людям\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Post from \"../Post/Post\";\r\n\r\nexport default function MyPosts({ posts }) {\r\n  let postsList = posts.map((post) => (\r\n    <Post key={post.id} text={post.text} likes={post.likes} />\r\n  ));\r\n\r\n  return <div>{postsList}</div>;\r\n}\r\n","import s from \"./UserInfo.module.css\";\r\n\r\nexport default function UserInfo(props) {\r\n  let contacts = props.data.contacts ? Object.keys(props.data.contacts) : [];\r\n  const contactsItems = contacts.map((m) => {\r\n    return (\r\n      <div key={m}>\r\n        {m} :{\" \"}\r\n        {props.data.contacts[`${m}`]\r\n          ? props.data.contacts[`${m}`]\r\n          : \"не задано\"}{\" \"}\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <div className={s.userinfo}>\r\n      <img\r\n        className={s.avatar}\r\n        src={props.data?.photos?.large || \"/img/ava-blue.jpg\"}\r\n        alt=\"avatar\"\r\n      />\r\n      <div className={s.text}>Имя: {props.data.fullName}</div>\r\n      <div className={s.text}>О себе: {props.data.aboutMe}</div>\r\n      <div className={s.text}>{contactsItems}</div>\r\n      <div className={s.text}>\r\n        {props.data.lookingForAJob ? \"Ищу работу\" : \"Работу не ищу\"}\r\n      </div>\r\n      <div className={s.text}>\r\n        Какую работу ищу:{props.data.lookingForAJobDescription}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport s from \"./NewPost.module.css\";\r\n\r\nfunction NewPost({ handleSubmit }) {\r\n  return (\r\n    <div className={s.newPost}>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <fieldset>\r\n            <legend>&nbsp;Новый пост&nbsp;</legend>\r\n            <Field\r\n              component=\"textarea\"\r\n              name=\"newMessage\"\r\n              cols=\"30\"\r\n              rows=\"10\"\r\n              placeholder=\"Введите свое сообщение\"\r\n              // value={props.profileInputState}\r\n              // onChange={updateState}\r\n            ></Field>\r\n            <button className={s.newpostBtn}>Добавить новый пост</button>\r\n          </fieldset>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst NewPostReduxForm = reduxForm({ form: \"newPost\" })(NewPost);\r\nexport default NewPostReduxForm;\r\n","import React, { useState } from \"react\";\r\nimport s from \"./Profile.module.css\";\r\n\r\nexport default function Status({\r\n  updateStatusOnServer,\r\n  statusText: propsStatusText,\r\n}) {\r\n  const [showInput, setShowInput] = useState(false);\r\n  const [statusText, setStatusText] = useState(propsStatusText);\r\n\r\n  const showStatusInput = () => {\r\n    setShowInput(true);\r\n    setStatusText(propsStatusText);\r\n  };\r\n\r\n  const hideStatusInput = () => {\r\n    setShowInput(false);\r\n    updateStatusOnServer(statusText);\r\n  };\r\n\r\n  const onInputChange = (e) => {\r\n    setStatusText(e.target.value);\r\n  };\r\n\r\n  const onEnter = (e) => {\r\n    e.key === \"Enter\" && hideStatusInput();\r\n  };\r\n\r\n  return (\r\n    <div className={s.statusBox}>\r\n      {showInput ? (\r\n        <input\r\n          onChange={onInputChange}\r\n          onKeyDown={onEnter}\r\n          className={s.statusInput}\r\n          autoFocus={true}\r\n          type=\"text\"\r\n          value={statusText}\r\n          onBlur={hideStatusInput}\r\n        />\r\n      ) : (\r\n        <span onDoubleClick={showStatusInput}>{propsStatusText || \" \"}</span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport UserInfo from \"./UserInfo/UserInfo\";\r\nimport NewPostReduxForm from \"./NewPost/NewPost\";\r\n\r\nimport s from \"./Profile.module.css\";\r\nimport Status from \"./Status\";\r\n\r\nexport default function Profile({\r\n  profileData,\r\n  onSubmit,\r\n  posts,\r\n  updateStatusOnServer,\r\n  statusText,\r\n}) {\r\n  return (\r\n    <section className={s.content}>\r\n      <Status\r\n        updateStatusOnServer={updateStatusOnServer}\r\n        statusText={statusText}\r\n      />\r\n      <UserInfo data={profileData} />\r\n      <NewPostReduxForm onSubmit={onSubmit} />\r\n      <MyPosts posts={posts} />\r\n    </section>\r\n  );\r\n}\r\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          return matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  // (memoize: MemoizeFunction, ...memoizeOptions: MemoizerOptions) {\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n};","import { createSelector } from \"reselect\";\r\n\r\nexport const getPosts = (state) => {\r\n  return state.profilePage.posts;\r\n};\r\nexport const getPostsReselector = createSelector([getPosts], (posts) => {\r\n  return posts.filter((el) => true); // here goes some heavyweight processing\r\n});\r\n\r\nexport const getProfileData = (state) => {\r\n  return state.profilePage.profileData;\r\n};\r\n\r\nexport const getStatusText = (state) => {\r\n  return state.profilePage.statusText; //?\r\n};\r\n","export const getIsAuthorized = (state) => state.auth.isAuthorized;\r\nexport const getLogin = (state) => state.auth.login;\r\nexport const getAuthorizedUserId = (state) => state.auth.id;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  addPost,\r\n  setProfileThunkCreator,\r\n  getStatusFromServer,\r\n  updateStatusOnServer,\r\n} from \"../../redux/profileReducer.js\";\r\nimport Profile from \"./Profile\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n  getProfileData,\r\n  getStatusText,\r\n  getPostsReselector,\r\n} from \"../../redux/profileSelectors\";\r\nimport {\r\n  getAuthorizedUserId,\r\n  getIsAuthorized,\r\n} from \"../../redux/authSelectors.js\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId || this.props.authorizedUserId;\r\n    this.props.getStatusFromServer(userId); // в стор пишем полученное с сервера значение статуса\r\n    this.props.setProfileThunkCreator(userId);\r\n  }\r\n  onSubmit(message, dispatch) {\r\n    dispatch(addPost(message.newMessage));\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        onSubmit={this.onSubmit}\r\n        updateStatusOnServer={updateStatusOnServer}\r\n        statusText={this.props.statusText}\r\n        profileData={this.props.profileData}\r\n        posts={this.props.posts}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: getPostsReselector(state),\r\n    profileData: getProfileData(state),\r\n    statusText: getStatusText(state),\r\n    isAuthed: getIsAuthorized(state),\r\n    authorizedUserId: getAuthorizedUserId(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    addPost,\r\n    setProfileThunkCreator,\r\n    getStatusFromServer,\r\n    updateStatusOnServer,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  return class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuthed) return <Redirect to={\"/login\"} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  };\r\n};\r\n"],"sourceRoot":""}